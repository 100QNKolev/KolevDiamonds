@model ProductQueryModel

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    { previousPage = 1; }
    var maxPage = Math.Ceiling((double)Model.TotalProductCount / Model.ProductsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start"> <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="@Model.ProductType" asp-action="All" asp-route-currentPage="@previousPage" asp-route-priceFilter="@Model.PriceFilter"><<</a> </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Products.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end"> <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)" asp-controller="@Model.ProductType" asp-action="All" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-priceFilter="@Model.PriceFilter">></a> </div>
</div>