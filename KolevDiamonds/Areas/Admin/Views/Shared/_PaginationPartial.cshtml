@model ProductQueryModel

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    { previousPage = 1; }
    var maxPage = Math.Ceiling((double)Model.TotalProductCount / Model.ProductsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start"> 
        <a class="btn custom-btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
        asp-area="Admin"
        asp-controller="@Model.ProductType" 
        asp-action="All" 
        asp-route-currentPage="@previousPage"
        asp-route-priceFilter="@Model.PriceFilter"
        asp-route-isForSale="@Model.IsForSale"><i class="fas fa-chevron-left"></i></a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Products.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end"> 
        <a class="btn custom-btn @(shouldButtonBeDisabled ? "disabled" : string.Empty)" 
        asp-area="Admin"
        asp-controller="@Model.ProductType"
        asp-action="All"
        asp-route-currentPage="@(Model.CurrentPage + 1)"
        asp-route-priceFilter="@Model.PriceFilter"
        asp-route-isForSale="@Model.IsForSale"><i class="fas fa-chevron-right"></i></a>
    </div>
</div>

<style>
    .custom-btn {
        background-color: white; 
        border: none; 
        color: black; 
        padding: 10px 15px; 
    }

        .custom-btn:hover {
            background-color: #f0f0f0; 
        }

        .custom-btn.disabled {
            cursor: not-allowed; 
            opacity: 0.5; 
        }
</style>